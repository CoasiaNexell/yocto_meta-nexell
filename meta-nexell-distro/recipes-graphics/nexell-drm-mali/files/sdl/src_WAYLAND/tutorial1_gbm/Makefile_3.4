########################################################################
# Get Linux	Build Enviornment:
include	../../build.env

######################################################################
# Build	options
INCLUDE	+= -I./
LIBRARY	+= -L$(LIB_INSTALL) -L../../../mali400/driver/lib/ -lMali -lEGL -lGLESv2  -ldl
#LIBRARY	+= -L$(LIB_INSTALL) -L../../../mali400/driver/lib64/ -lMali -lEGL -lGLESv2  -ldl
LIBRARY	+= -lstdc++	-lpthread
CPPFLAGS += "-D__int64=long long"
CFLAGS += "-D__int64=long long"

######################################################################
# Target
COBJS	:=
CPPOBJS	:= tutorial1.o t1_render.o shaders.o Fake_OS.o __fire128_tga.o __door128_tga.o
TARGET	:= tutorial1_es2_gbm


######################################################################
# Build
OBJS	:= $(COBJS)	$(CPPOBJS)

all: $(TARGET)

$(TARGET): depend $(OBJS)
	$(CC) $(CPPFLAGS) $(OBJS) -o $@	$(LIBRARY)
	#sudo cp -a $(TARGET) ~/devel/nfs/kernel_rootfs-$(ARCHNAME)/test/

clean:
	@find $(OBJTREE) -type f \
		\( -name '*.o'	-o -name $(TARGET) -o -name	'*.map'	\) -print \
		| xargs	rm -f

nfs:
	sudo cp -f $(TARGET) ~/devel/nfs/kernel_rootfs-$(ARCHNAME)/test/

#########################################################################
# Dependency
ifeq (dependency_list_$(TARGET),$(wildcard dependency_list_$(TARGET)))
include	dependency_list_$(TARGET)
endif

SRCS :=	$(COBJS:.o=.c) $(CPPOBJS:.o=.cpp)
INCS :=	$(INCLUDE)
depend dep:
	$(CC)  -M  $(CPPFLAGS) $(CFLAGS) $(INCS) $(INCLUDE)	$(SRCS)	> dependency_list_$(TARGET)



